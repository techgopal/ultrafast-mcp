name: Pull Request Checks

on:
  pull_request:
    branches: [ main, develop ]
  # Also run on push to PR branches for faster feedback
  push:
    branches-ignore: [ main, develop ]

env:
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1

jobs:
  # Fast PR checks - runs on every PR
  pr-checks:
    name: PR Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2
      with:
        key: pr-${{ hashFiles('**/Cargo.lock') }}

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev

    - name: Check code formatting
      run: cargo fmt --all -- --check

    - name: Run clippy (warnings only)
      run: cargo clippy --all-targets --all-features

    - name: Run tests
      run: cargo test --all-targets --all-features

    - name: Build all crates
      run: cargo build --all-targets --all-features

    - name: Build examples
      run: cargo build --examples --all-features

    - name: Check documentation builds
      run: cargo doc --no-deps --all-features

  # Security audit for PRs
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    timeout-minutes: 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Install cargo-audit
      run: cargo install cargo-audit

    - name: Run security audit
      run: cargo audit

  # Basic feature testing for non-draft PRs
  feature-test:
    name: Feature Testing
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false
    timeout-minutes: 10

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Rust toolchain
      uses: dtolnay/rust-toolchain@stable

    - name: Cache dependencies
      uses: Swatinem/rust-cache@v2

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y pkg-config libssl-dev

    - name: Test with minimal features
      run: |
        cargo test --no-default-features
        cargo test --features stdio-transport
        cargo test --features http-transport
        cargo test --features oauth 