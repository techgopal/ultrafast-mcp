[package]
name = "ultrafast-mcp-transport"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
readme = "README.md"
description = "Transport layer for UltraFast MCP"

# docs.rs configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Internal dependencies
ultrafast-mcp-core = { path = "../ultrafast-mcp-core", version = "=202506018.1.0-rc.2" }
ultrafast-mcp-auth = { path = "../ultrafast-mcp-auth", version = "=202506018.1.0-rc.2" }
ultrafast-mcp-monitoring = { path = "../ultrafast-mcp-monitoring", version = "=202506018.1.0-rc.2" }

# Async runtime
tokio = { workspace = true }

# HTTP client/server (optional)
reqwest = { workspace = true, optional = true }
axum = { workspace = true, optional = true }
axum-extra = { workspace = true, optional = true }
bytes = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }

# Async traits
async-trait = { workspace = true }

# Logging
tracing = { workspace = true }

# Serialization
serde = { workspace = true }
serde_json = { workspace = true }

# Error handling
anyhow = { workspace = true }
thiserror = { workspace = true }

# UUID generation
uuid = { workspace = true }

# Time handling
chrono = { workspace = true }

# Async streams and random jitter
futures = { workspace = true }
rand = { workspace = true }

[features]
# No default features for minimal footprint
default = []

# Core functionality (always available)
core = []

# Standard I/O transport (always available)
stdio = []

# HTTP transport support
http = ["axum", "reqwest", "tower-http", "axum-extra", "bytes"]

# All transport types
full = ["core", "stdio", "http"]

[dev-dependencies]
tokio-test = { workspace = true }
