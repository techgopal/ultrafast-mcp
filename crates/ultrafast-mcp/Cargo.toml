[package]
name = "ultrafast-mcp"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
readme.workspace = true
description = "High-performance, ergonomic Model Context Protocol (MCP) implementation in Rust"

# docs.rs configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Internal dependencies
ultrafast-mcp-core = { path = "../ultrafast-mcp-core", version = "202506018.1.0-rc.1.4" }
ultrafast-mcp-server = { path = "../ultrafast-mcp-server", version = "202506018.1.0-rc.1.4" }
ultrafast-mcp-transport = { path = "../ultrafast-mcp-transport", version = "202506018.1.0-rc.1.4" }
ultrafast-mcp-auth = { path = "../ultrafast-mcp-auth", version = "202506018.1.0-rc.1.4", optional = true }

# Runtime dependencies
tokio = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }

# HTTP transport
axum = { workspace = true, optional = true }
reqwest = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }

# Authentication
oauth2 = { workspace = true, optional = true }
jsonwebtoken = { workspace = true, optional = true }
base64 = { workspace = true, optional = true }
url = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
sha2 = { workspace = true, optional = true }

# UUID generation
uuid = { workspace = true }

# Logging
tracing = { workspace = true }

# JSON Schema
schemars = { workspace = true }

# Monitoring and observability
ultrafast-mcp-monitoring = { path = "../ultrafast-mcp-monitoring", version = "202506018.1.0-rc.1.4", optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }
tracing-opentelemetry = { workspace = true, optional = true }
metrics = { workspace = true, optional = true }
sysinfo = { workspace = true, optional = true }
chrono = { workspace = true, optional = true }

[features]
default = []
# Enables monitoring and metrics collection
monitoring = ["ultrafast-mcp-monitoring"]
# Enables HTTP transport support
http = ["ultrafast-mcp-transport/http", "ultrafast-mcp-server/http", "axum", "reqwest", "tower", "tower-http"]
# Enables OAuth authentication support
oauth = ["ultrafast-mcp-auth/oauth", "oauth2", "jsonwebtoken", "base64", "url", "rand", "sha2"]
# Enables all features
full = ["monitoring", "http", "oauth"]
# Minimal features for basic usage
minimal = [] 