[package]
name = "ultrafast-mcp-monitoring"
version.workspace = true
edition.workspace = true
license.workspace = true
repository.workspace = true
homepage.workspace = true
documentation.workspace = true
authors.workspace = true
keywords.workspace = true
categories.workspace = true
readme = "README.md"
description = "Monitoring and observability for ULTRAFAST MCP with OpenTelemetry support."

# docs.rs configuration
[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
# Core dependencies
tokio = { workspace = true, features = ["fs"] }
serde = { workspace = true }
serde_json = { workspace = true }
anyhow = { workspace = true }
thiserror = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
tracing = { workspace = true }
tracing-subscriber = { workspace = true, features = ["time"] }
uuid = { workspace = true, features = ["v4"] }
chrono = { workspace = true }
sysinfo = { workspace = true }

# OpenTelemetry core (optional)
opentelemetry = { workspace = true, optional = true }
opentelemetry_sdk = { workspace = true, optional = true }

# OpenTelemetry exporters (optional)
opentelemetry-jaeger = { workspace = true, optional = true }
opentelemetry-prometheus = { workspace = true, optional = true }
opentelemetry-otlp = { workspace = true, optional = true }

# Tracing integration (optional)
tracing-opentelemetry = { workspace = true, optional = true }

# Metrics (optional)
metrics = { workspace = true, optional = true }
metrics-exporter-prometheus = { workspace = true, optional = true }

# HTTP support for metrics endpoints (optional)
axum = { workspace = true, optional = true }
tower = { workspace = true, optional = true }

# Configuration formats (optional)
toml = { workspace = true, optional = true }
serde_yaml = { workspace = true, optional = true }

[features]
# No default features for minimal footprint
default = []

# Core monitoring functionality
core = []

# HTTP metrics endpoints
http = ["axum", "tower", "opentelemetry-prometheus", "metrics", "metrics-exporter-prometheus"]

# Jaeger tracing support
jaeger = ["opentelemetry-jaeger", "tracing-opentelemetry"]

# OTLP tracing support
otlp = ["opentelemetry-otlp", "tracing-opentelemetry"]

# Console tracing output
console = ["tracing-opentelemetry"]

# Configuration file support
config-files = ["toml", "serde_yaml"]

# All monitoring features
all = ["core", "http", "jaeger", "otlp", "console", "config-files"]

[dev-dependencies]
tokio-test = { workspace = true }
tempfile = { workspace = true }
